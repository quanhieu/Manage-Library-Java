/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.*;
import javax.swing.*;
import DAO.*;

/**
 *
 * @author Soi Lan Tron
 */
public class MajorManage extends javax.swing.JInternalFrame {

    /**
     * Creates new form MS
     */
    public MajorManage() {
        initComponents();
        loadMajor();
        loadStudent();
        loadMajorId();
    }

    DefaultTableModel dtm;
    DefaultTableModel dtm1;
    DefaultComboBoxModel dcm;

    majorAccess obj = new majorAccess();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
//    private void setConn() {
//        try {
//            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//            sqlCon = DriverManager.getConnection("jdbc:sqlserver://localhost;database=LibDB", "sa", "123");
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//    }
    private void createTableMajor() {
        dtm = new DefaultTableModel();
        dtm.addColumn("Major Id");
        dtm.addColumn("Major Name");
        dtm.addColumn("Phone Number");

        tblMajor.setModel(dtm);
    }

    private void createTableStudent() {
        dtm1 = new DefaultTableModel();
        dtm1.addColumn("Student Id");
        dtm1.addColumn("Student Name");
//        dtm.addColumn("Password");
        dtm1.addColumn("Student Address");
        dtm1.addColumn("Phone Number");
        dtm1.addColumn("Major Id");

        tblStudent.setModel(dtm1);
    }

    private void loadMajor() {
        try {
            createTableMajor();
            obj.setConn();
            obj.pstmt = obj.sqlCon.prepareStatement("SELECT * FROM major");
            obj.rs = obj.pstmt.executeQuery();
            while (obj.rs.next()) {
                Vector vec = new Vector();
                vec.add(0, obj.rs.getString(1));
                vec.add(1, obj.rs.getString(2));
                vec.add(2, obj.rs.getString(3));

                dtm.addRow(vec);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadStudent() {
        try {
            createTableStudent();
            obj.setConn();
            obj.pstmt = obj.sqlCon.prepareStatement("SELECT * FROM Student");
            obj.rs = obj.pstmt.executeQuery();
            while (obj.rs.next()) {
                Vector vec = new Vector();
                vec.add(0, obj.rs.getString(1));
                vec.add(1, obj.rs.getString(2));
                vec.add(2, obj.rs.getString(4));
                vec.add(3, obj.rs.getString(5));
                vec.add(4, obj.rs.getString(6));
                dtm1.addRow(vec);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadMajorId() {
        dcm = new DefaultComboBoxModel();
        try {
            obj.setConn();
            obj.pstmt = obj.sqlCon.prepareStatement("SELECT DISTINCT majorId FROM STUDENT");
            obj.rs = obj.pstmt.executeQuery();
            while (obj.rs.next()) {
                dcm.addElement(obj.rs.getString("majorId"));

                ComboboxMajorId.setModel(dcm);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblMess = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMajor = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        ComboboxMajorId = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Major Management System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 51, 153));

        lblMess.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblMess.setForeground(new java.awt.Color(255, 0, 102));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Add New Book\n"));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setText("Major Id");

        txtId.setEditable(false);

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel3.setText("Major name");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel4.setText("Major Phone");

        btnNew.setText("Create");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtId)
            .addComponent(txtName)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(0, 323, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnNew)
                .addGap(67, 67, 67)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(29, 29, 29))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(txtPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnNew))
                .addGap(0, 42, Short.MAX_VALUE))
        );

        tblMajor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMajor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMajorMouseClicked(evt);
            }
        });
        tblMajor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblMajorKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblMajor);

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Choose");

        ComboboxMajorId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboboxMajorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboboxMajorIdActionPerformed(evt);
            }
        });

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblStudent.setEnabled(false);
        jScrollPane3.setViewportView(tblStudent);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel6)
                        .addGap(58, 58, 58)
                        .addComponent(ComboboxMajorId, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 871, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(lblMess, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblMess, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(ComboboxMajorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        if (txtName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name major is required");
            txtName.requestFocus();
            return;
        } else if (txtPhone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Phone major is required");
            txtPhone.requestFocus();
            return;
        }
        
        else {

            obj.addMajor(txtName.getText(), txtPhone.getText());
            lblMess.setText("Add major complete");
            loadMajor();
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        obj.updateMajor(Integer.parseInt(txtId.getText()), txtName.getText(), txtPhone.getText());
        loadMajor();
        lblMess.setText("Update major completed");
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        obj.deleteMajor(Integer.parseInt(txtId.getText())); // TODO add your handling code here:
        loadMajor();
        lblMess.setText("Delete major completed");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblMajorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMajorMouseClicked
        try {
            obj.setConn();
            obj.pstmt = obj.sqlCon.prepareStatement("SELECT * FROM Major");
            obj.rs = obj.pstmt.executeQuery();
            if (obj.rs.next()) {
                int row = tblMajor.getSelectedRow();
                txtId.setText(tblMajor.getValueAt(row, 0).toString());
                txtName.setText(tblMajor.getValueAt(row, 1).toString());
                txtPhone.setText(tblMajor.getValueAt(row, 2).toString());

                //  lOAD DETAILS STUDENT IN IN MAJORS
            }
            int row1 = tblMajor.getSelectedRow();
            String a = tblMajor.getValueAt(row1, 0).toString();
            obj.pstmt = obj.sqlCon.prepareStatement("SELECT * FROM Student WHERE majorId = '" + a + "'",
                    ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            obj.rs = obj.pstmt.executeQuery();
            Vector<String> vec;
            createTableStudent();
            while (obj.rs.next()) {
                vec = new Vector<String>();
                vec.add(obj.rs.getString(1));
                vec.add(obj.rs.getString(2));
                vec.add(obj.rs.getString(4));
                vec.add(obj.rs.getString(5));
                vec.add(obj.rs.getString(6));

                dtm1.addRow(vec);
            }

        } catch (SQLException ex) {
            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblMajorMouseClicked

    private void tblMajorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMajorKeyReleased
        // TODO add your handling code here:
        try {
            obj.setConn();
            obj.pstmt = obj.sqlCon.prepareStatement("SELECT * FROM major", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            obj.rs = obj.pstmt.executeQuery();
            if (obj.rs.next()) {
                int row = tblMajor.getSelectedRow();
                txtId.setText(tblMajor.getValueAt(row, 0).toString());
                txtName.setText(tblMajor.getValueAt(row, 1).toString());
                txtPhone.setText(tblMajor.getValueAt(row, 2).toString());

                //  lOAD DETAILS STUDENT IN IN MAJORS
                int row1 = tblMajor.getSelectedRow();
                String a = tblMajor.getValueAt(row1, 0).toString();
                obj.pstmt = obj.sqlCon.prepareStatement("SELECT * FROM Student WHERE majorId = '" + a + "'",
                        ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                obj.rs = obj.pstmt.executeQuery();
                Vector<String> vec;
                createTableStudent();
                while (obj.rs.next()) {
                    vec = new Vector<String>();
                    vec.add(obj.rs.getString(1));
                    vec.add(obj.rs.getString(2));
                    vec.add(obj.rs.getString(4));
                    vec.add(obj.rs.getString(5));
                    vec.add(obj.rs.getString(6));

                    dtm1.addRow(vec);
                }

            }
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tblMajorKeyReleased

    private void ComboboxMajorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboboxMajorIdActionPerformed
        createTableStudent();
        try {
            // tao doi tuong thuc thi gan voi doi tuong reparestatement
            obj.pstmt = obj.sqlCon.prepareStatement("SELECT * FROM Student WHERE majorId='" + ComboboxMajorId.getSelectedItem() + "' ");
            obj.rs = obj.pstmt.executeQuery();
            while (obj.rs.next()) {
                Vector v = new Vector();
                v.add(0, obj.rs.getString("StudentId"));
                v.add(1, obj.rs.getString("StudentName"));
                v.add(2, obj.rs.getString("Address"));
                v.add(3, obj.rs.getString("PhoneNumber"));
                v.add(4, obj.rs.getString("MajorId"));

                dtm1.addRow(v);
            }
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(MajorManage.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboboxMajorIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboboxMajorId;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMess;
    private javax.swing.JTable tblMajor;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
